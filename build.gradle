// The group name of our project
group = 'com.documakery'

version = '0.0.1'

description = 'documakery'

task wrapper(type: Wrapper) {
  description = "Generates gradlew[.bat] scripts"
  gradleVersion = "1.3"
}

buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.2'
    }
}


project(':documakery-server') {
  description = "Documakery Server"
  
	apply plugin: "java"
  apply plugin: "war"
  
  // Provides additional optional and provided dependency configurations for Gradle
  apply plugin: "propdeps"
	apply plugin: "propdeps-eclipse"

  // Import the eclipse plugin, this is used to help set-up our development environment
  // when we type gradle cleanEclipse eclipse
  apply plugin: "eclipse"
  apply plugin: "eclipse-wtp"
  
  // Source set for integration tests
  sourceSets {
    integrationTest {
      java {
        compileClasspath += main.output
        runtimeClasspath += main.output
      }
    }
  }

  configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
  }

  task integrationTest(type:Test){
    description = "Run integration tests (located in src/integrationTest/...)."
    testClassesDir = project.sourceSets.integrationTest.output.classesDir
    classpath = project.sourceSets.integrationTest.runtimeClasspath
  }
  
  eclipse {
    project {
      natures "com.springsource.sts.gradle.core.nature"
      natures "org.springframework.ide.eclipse.core.springnature"
    }
    classpath {
      //containers "com.springsource.sts.gradle.classpathcontainer"
      
      file {
        // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
        withXml { xml ->
          def node = xml.asNode()
          node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
          node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
        }
      } 
    }
  }
  
  sourceCompatibility = 1.7
  
  // Declare some constants for versions we are using.
  ext.springVersion             = "3.2.1.RELEASE"
  ext.springSecurityVersion     = "3.2.0.M1"
  ext.hibernateValidatorVersion = "5.0.0.Alpha2"
  
  repositories {   
    mavenCentral()
    maven {url "http://repo.springsource.org/release"}
    maven {url "http://repo.springsource.org/milestone"}
    maven {url "http://repo.springsource.org/snapshot"}
  }

  dependencies {
    // Spring dependencies 
    compile("org.springframework:spring-webmvc:$springVersion") {
       exclude group: 'commons-logging'
    }
    compile("org.springframework.security:spring-security-web:$springSecurityVersion")
    compile("org.springframework.security:spring-security-config:$springSecurityVersion")
    
    // compile("org.springframework:spring-tx:$springVersion")          
    // compile("org.springframework:spring-orm:$springVersion")
    // compile("org.springframework:spring-jdbc:$springVersion")
    // compile("org.springframework:spring-aspects:$springVersion")
    // compile("org.springframework:spring-aop:$springVersion")
    // compile("org.aspectj:aspectjrt:1.7.1")
    
    // MongoDB
    compile("org.springframework.data:spring-data-mongodb:1.1.1.RELEASE")
    
    // Java's JSR-330 / JSR-299 dependency injection
    compile("javax.inject:javax.inject:1")
    
    // Jackson JSON Mapper
    compile("com.fasterxml.jackson.core:jackson-core:2.1.2")
    compile("com.fasterxml.jackson.core:jackson-databind:2.1.2")  

    // Hibernate Validator
    compile("org.hibernate:hibernate-validator:$hibernateValidatorVersion")
    
    // Logging
    compile("org.slf4j:slf4j-api:1.7.2")
    runtime("org.slf4j:jcl-over-slf4j:1.7.2")
    compile("ch.qos.logback:logback-classic:1.0.9")
    compile("ch.qos.logback:logback-access:1.0.9") // HTTP-access logging
    
    // Utils
    compile("com.google.guava:guava:14.0-rc2")

    provided("javax.servlet:servlet-api:2.5")

    testCompile("junit:junit:4.11")
    testCompile("org.springframework:spring-test:$springVersion")
    testCompile("org.mockito:mockito-core:1.9.5")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.28")
    testCompile("com.jayway.jsonpath:json-path:0.8.1")
  }
}

project(':documakery-client') {
  description = "Documakery Dart Client"

  apply plugin: "eclipse"
  
  eclipse {
    project {
      natures "com.google.dart.tools.core.dartNature"
      
      buildCommand "com.google.dart.tools.core.dartBuilder"
    }
  }
}