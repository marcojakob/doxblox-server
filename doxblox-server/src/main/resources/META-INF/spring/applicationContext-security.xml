<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
        
    <context:component-scan base-package="ch.doxblox.security" />

	<security:http pattern="/inde.html" security="none" />
	<security:http pattern="/angular/**" security="none" />

	<security:http pattern="/**" create-session="never" entry-point-ref="restAuthenticationEntryPoint">
		<!-- Add the basic auth filter to the Spring Security filter chain -->
		<security:custom-filter ref="basicAuthFilter" position="BASIC_AUTH_FILTER" />
		<!-- Add the login filter to the Spring Security filter chain -->
		<security:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<!-- Add the logout filter to the Spring Security filter chain -->
		<security:logout logout-url="/logout" delete-cookies="true"
			invalidate-session="true" success-handler-ref="restLogoutSuccessHandler" />
	</security:http>
	
	<!-- Enable @PreAuthorize and @PostAuthorize annotations -->
    <security:global-method-security pre-post-annotations="enabled">
        <!-- Adds a reference to the used expression handler bean -->
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>
    
	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="myPermissionEvaluator" />
    </bean>
    
    <bean id="myPermissionEvaluator" class="ch.doxblox.security.authorization.MyPermissionEvaluator"/>

	<!-- Configure the authentication entry point -->
	<bean id="restAuthenticationEntryPoint"
		class="ch.doxblox.security.authentication.RestAuthenticationEntryPoint" />

	<!-- Configure a custom basic auth filter bean -->
    <bean id="basicAuthFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
    </bean>

	<!-- Configure a custom login filter bean -->
    <bean id="loginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="restAuthenticationFailureHandler"/>
        <property name="authenticationSuccessHandler" ref="restAuthenticationSuccessHandler"/>
        <property name="filterProcessesUrl" value="/login"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
        <property name="postOnly" value="true"/>
    </bean>
	
	<!-- Configures a custom authentication success handler that returns the HTTP status code 200 instead of the 301 HTTP status code -->
    <bean id="restAuthenticationSuccessHandler" class="ch.doxblox.security.authentication.RestAuthenticationSuccessHandler"/>

    <!-- Configures a custom authentication failure handler -->
    <bean id="restAuthenticationFailureHandler" class="ch.doxblox.security.authentication.RestAuthenticationFailureHandler"/>

    <!-- Configures a custom logout success handler -->
    <bean id="restLogoutSuccessHandler" class="ch.doxblox.security.authentication.RestLogoutSuccessHandler"/>

	<!-- Configures UserDetailsService implementation -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="myUserDetailsService">
        	<security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    
	<bean id="myUserDetailsService" class="ch.doxblox.service.impl.MyUserDetailsService" />
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
</beans>