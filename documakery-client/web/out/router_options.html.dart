// Auto-generated from router_options.html.
// DO NOT EDIT.

library x_router_options;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'dart:html';

import '../packages/web_ui/web_ui.dart';

class RouterOptions extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  
  RouterOptions.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    if (_root is autogenerated_html.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHtml = '''
    
    <content></content>''';
    
  }
  
  void inserted_autogenerated() {
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  var _stopWatcher;
  
  void inserted() {
    super.inserted();
    
    var anchors = this.queryAll('a');
    
    // TODO(jmesserly): this only works because main() registered for
    // popState and hashChanged.
    _stopWatcher = watchAndInvoke(() => window.location.hash, (e) {
      var hash = e.newValue;
      if (hash == '') hash = '#/';
      for (var a in anchors) {
        updateCssClass(a, a.hash == hash, 'selected');
      }
    });
  }
  
  void removed() {
    _stopWatcher();
    super.removed();
  }
}

